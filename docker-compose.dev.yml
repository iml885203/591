version: '3.8'

services:
  # PostgreSQL database for development and testing
  postgres-dev:
    image: postgres:16-alpine
    container_name: 591-crawler-postgres-dev
    ports:
      - "5498:5432"
    environment:
      POSTGRES_DB: crawler_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/dev-db-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d crawler_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - dev-network

  # PostgreSQL database specifically for integration tests
  postgres-test:
    image: postgres:16-alpine
    container_name: 591-crawler-postgres-test
    ports:
      - "5499:5432"
    environment:
      POSTGRES_DB: crawler_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d crawler_test"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - dev-network

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: 591-crawler-pgadmin
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres-dev:
        condition: service_healthy
      postgres-test:
        condition: service_healthy
    networks:
      - dev-network
    profiles:
      - pgadmin

networks:
  dev-network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
  postgres_test_data:
    driver: local
  pgadmin_data:
    driver: local